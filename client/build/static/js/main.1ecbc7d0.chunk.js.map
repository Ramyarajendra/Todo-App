{"version":3,"sources":["actions/types.js","actions/todoAction.js","components/Navbar.js","components/Todos.js","components/TodoList.js","components/Modal.js","components/FilterTodo.js","pages/HomePage.js","reducers/todoReducer.js","reducers/index.js","store.js","pages/EditPage.js","App.js","reportWebVitals.js","index.js"],"names":["GET_TODO","LIST_TODOS","CREATE_TODO","UPDATE_TODO","ERROR_TODO","TODO_RESET","DELETE_TODO","listTodos","filter","dispatch","a","config","params","projects","length","priority","context","duebefore","dueBefore","dueafter","dueAfter","order","axios","get","data","type","payload","response","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","backgroundColor","grid","marginInline","menu","height","Navbar","classes","useDispatch","useState","anchorEl","setAnchorEl","sortArr","setSortArr","idCheck","textCheck","priorityCheck","createdDateCheck","completedDateCheck","dueDateCheck","contextCheck","projectCheck","values","setValues","handleClose","handleChangeRadio","prop","e","target","value","find","arr","val","push","menuPopper","Menu","id","className","keepMounted","open","Boolean","onClose","Grid","container","direction","justify","alignItems","item","xs","InputLabel","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","Divider","style","marginBlock","Button","variant","onClick","map","m","then","AppBar","position","CssBaseline","Toolbar","Typography","aria-controls","aria-haspopup","event","currentTarget","startIcon","width","bullet","display","margin","transform","fontSize","fontFamily","fontStyle","pos","marginBottom","avatar","box","fontWeight","chip","Todos","todo","onDelete","window","confirm","delete","deleteTodo","md","Card","CardHeader","Avatar","Todo","action","Tooltip","to","ID","IconButton","Box","subheader","CreatedDate","Date","toDateString","CardContent","Priority","component","gutterBottom","Projects","project","Chip","Contexts","DueDate","Completed","TodoList","todos","useSelector","state","todoReducer","deleted","useEffect","Container","Modal","setOpen","todoName","setTodoName","setPriority","setProjects","contexts","setContexts","dueDate","setDueDate","completed","setCompleted","onHandleChange","str","replace","split","Dialog","fullWidth","aria-labelledby","aria-describedby","onSubmit","createdTodo","preventDefault","post","DialogTitle","DialogContent","DialogContentText","TextField","placeholder","required","toUpperCase","helperText","inputProps","maxLength","utils","DateFnsUtils","autoOk","format","date","KeyboardButtonProps","Checkbox","checked","FormHelperText","DialogActions","autoFocus","FilterTodo","setDueBefore","setDueAfter","handleChange","formatDate","d","month","getMonth","day","getDate","year","getFullYear","join","px","py","my","console","log","absolute","bottom","right","overflow","maxHeight","HomePage","React","Fab","initialState","loading","error","combineReducers","success","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","typography","EditPage","match","history","Number","getTodo","updatedTodo","put","updateTodo","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ecbc7d0.chunk.js","sourcesContent":["export const GET_TODO = 'GET_TODO'\nexport const LIST_TODOS = 'LIST_TODOS'\nexport const CREATE_TODO = 'CREATE_TODO'\nexport const UPDATE_TODO = 'UPDATE_TODO'\nexport const ERROR_TODO = 'ERROR_TODO'\nexport const TODO_RESET = 'TODO_RESET'\nexport const DELETE_TODO = 'DELETE_TODO'\n","import axios from 'axios'\nimport { CREATE_TODO, DELETE_TODO, ERROR_TODO, GET_TODO, LIST_TODOS, UPDATE_TODO } from './types'\n\nexport const listTodos = (filter) => async dispatch => {\n    try {\n        if(filter){\n            const config = {\n                params: {\n                    projects: filter.projects?.length !== 0 ? filter.projects: null,\n                    priority: filter.priority !== '' ? filter.priority: null,\n                    context: filter.context?.length !== 0 ? filter.context: null,\n                    duebefore: filter.dueBefore,\n                    dueafter: filter.dueAfter,\n                    order: filter.order\n                }\n            }\n            const { data } = await axios.get('/todos', { ...config })\n            dispatch({\n                type: LIST_TODOS,\n                payload: data\n            })\n        } else {\n            const { data } = await axios.get('/todos')\n            dispatch({\n                type: LIST_TODOS,\n                payload: data\n            })\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR_TODO,\n            payload: error.response\n        })\n    }\n}\nexport const getTodo = (id) => async dispatch => {\n    try {\n        const {data} = await axios.get(`/todo/${id}`)\n        dispatch({\n            type: GET_TODO,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR_TODO,\n            payload: error.response\n        })\n    }\n}\nexport const updateTodo = (id, updatedTodo) => async dispatch => {\n    try {\n        const {data} = await axios.put(`/todo/${id}`, updatedTodo)\n        dispatch({\n            type: UPDATE_TODO,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR_TODO,\n            payload: error.response\n        })\n    }\n}\nexport const createTodo = (createdTodo) => async dispatch => {\n    try {\n        const {data} = await axios.post('/todo', createdTodo)\n        dispatch({\n            type: CREATE_TODO,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR_TODO,\n            payload: error.response\n        })\n    }\n}\n\nexport const deleteTodo = (id) => async dispatch => {\n    try {\n        await axios.delete(`/todo/${id}`)\n        dispatch({\n            type: DELETE_TODO\n        })\n    } catch (error) {\n        dispatch({\n            type: ERROR_TODO,\n            payload: error.response\n        })\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, CssBaseline, Divider, FormControlLabel, Grid, InputLabel, Menu, Radio, RadioGroup } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { listTodos } from '../actions/todoAction';\nimport {useDispatch} from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  color:{\n    backgroundColor: '#3A2952'\n  },\n  grid:{\n    marginInline: theme.spacing(1)\n  },\n  menu:{\n    height: '110vh'\n  }\n}));\n\nconst Navbar = () => {\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [sortArr, setSortArr] = useState([])\n\n    const [values, setValues] = useState({\n      idCheck: '',\n      textCheck: '',\n      priorityCheck: '',\n      createdDateCheck: '',\n      completedDateCheck: '',\n      dueDateCheck: '',\n      contextCheck: '',\n      projectCheck: ''\n    })\n    \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleChangeRadio = prop => (e) => {\n      setValues({...values, [prop]: e.target.value})\n      \n      if(sortArr.find(arr => arr.prop === prop)){\n        setSortArr(sortArr.filter(arr => arr.prop === prop ?  arr.val = e.target.value  : arr))\n      } else {\n        sortArr.push({ prop, val: e.target.value })\n      }\n    }\n\n    const onSort = () => {\n      const arr = sortArr.map(m => m.val)\n      dispatch(listTodos({ order: arr })).then(() => handleClose())\n    }\n\n    const onReset = () => {\n      setValues({\n        idCheck: '',\n        textCheck: '',\n        priorityCheck: '',\n        createdDateCheck: '',\n        completedDateCheck: '',\n        dueDateCheck: '',\n        contextCheck: '',\n        projectCheck: ''\n      })\n      dispatch(listTodos())\n      setSortArr([])\n      handleClose()\n    }\n\n    const menuPopper = (\n      <Menu\n        id=\"simple-menu\"\n        className={classes.menu}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>ID</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"idSort\" name=\"id\" value={values.idCheck} onChange={handleChangeRadio('idCheck')} >\n                <FormControlLabel value=\"SortTaskIDAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortTaskIDDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Todo Text</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n                <RadioGroup aria-label=\"textSort\" value={values.textCheck} name=\"text\" onChange={handleChangeRadio('textCheck')} >\n                  <FormControlLabel value=\"SortTodoTextAsc\" control={<Radio />} label=\"Asc\" />\n                  <FormControlLabel value=\"SortTodoTextDesc\" control={<Radio />} label=\"Desc\" />\n                </RadioGroup>\n            </Grid>\n          </Grid>                  \n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Priority</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n                <RadioGroup aria-label=\"prioritySort\" value={values.priorityCheck} name=\"priority\" onChange={handleChangeRadio('priorityCheck')} >\n                  <FormControlLabel value=\"SortPriorityAsc\" control={<Radio />} label=\"Asc\" />\n                  <FormControlLabel value=\"SortPriorityDesc\" control={<Radio />} label=\"Desc\" />\n                </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Created Date</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"CreatedDateSort\" value={values.createdDateCheck} name=\"CreatedDate\" onChange={handleChangeRadio('createdDateCheck')}  >\n                <FormControlLabel value=\"SortCreatedDateAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortCreatedDateDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Completed Date</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"CompletedDateSort\" value={values.completedDateCheck} name=\"CompletedDate\" onChange={handleChangeRadio('completedDateCheck')} >\n                <FormControlLabel value=\"SortCompletedDateAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortCompletedDateDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Due Date</InputLabel> \n            </Grid> \n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"DueDateSort\" value={values.dueDateCheck} name=\"DueDate\" onChange={handleChangeRadio('dueDateCheck')} >\n                <FormControlLabel value=\"SortDueDateAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortDueDateDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Context</InputLabel>    \n            </Grid>  \n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"ContextSort\" value={values.contextCheck} name=\"SortContext\" onChange={handleChangeRadio('contextCheck')}>\n                <FormControlLabel value=\"SortContextAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortContextDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Divider/>\n          <Grid className={classes.grid} container spacing={2} direction='row' justify='space-around' alignItems='center' >\n            <Grid item xs={5}>\n              <InputLabel>Project</InputLabel>\n            </Grid>\n            <Grid item xs={7}>\n              <RadioGroup aria-label=\"ProjectSort\" value={values.projectCheck} name=\"Project\" onChange={handleChangeRadio('projectCheck')} >\n                <FormControlLabel value=\"SortProjectAsc\" control={<Radio />} label=\"Asc\" />\n                <FormControlLabel value=\"SortProjectDesc\" control={<Radio />} label=\"Desc\" />\n              </RadioGroup>\n            </Grid>\n          </Grid>\n          <Grid style={{ marginBlock: 10 }} container spacing={2} direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n            <Button variant='contained' onClick={onSort}> Apply </Button>\n            <Button variant='contained' onClick={onReset}> Reset </Button>\n          </Grid>\n      </Menu>\n    )\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.color}>\n              <CssBaseline/>\n              <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                    TodoList\n                </Typography>\n                <Button\n                  color='inherit'\n                  aria-controls=\"simple-menu\" \n                  aria-haspopup=\"true\" \n                  onClick={handleClick}\n                  startIcon={<SortIcon />}\n                >\n                  Sort\n                </Button>\n                {menuPopper}\n              </Toolbar>\n            </AppBar>\n      </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Avatar, Box, CardHeader, Chip, Grid, IconButton, Paper, Tooltip } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { Link } from 'react-router-dom';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo } from '../actions/todoAction';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width:'100%',\n    height: '100%',\n    backgroundColor:'#ECEBFA'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 16,\n    fontFamily: `'Open Sans', sans-serif`,\n    fontStyle: 'oblique'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  avatar: {\n    backgroundColor: '#C6809B'\n  },\n  box:{\n    fontSize : 18,\n    fontFamily: `'Open Sans', sans-serif`,\n    fontWeight: 'bold'\n  },\n  chip: {\n    marginInline: 4\n  }\n}));\n\nconst Todos = ({todo}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n\n    const onDelete = (id) => {\n      if(window.confirm('Are you sure?')){\n        dispatch(deleteTodo(id))\n      }\n    }\n\n    return (\n          <Grid key={todo.ID} item xs={12} md={6}>\n              <Card className={classes.root} variant=\"outlined\">\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                          {todo.Todo[0]}\n                        </Avatar>\n                    }\n                    action={\n                      <>\n                      <Tooltip title=\"Edit\" aria-label=\"edit\">\n                        <Link to={`/edit/${todo.ID}`}> <IconButton><EditIcon /></IconButton></Link>   \n                      </Tooltip>\n                      <Tooltip title=\"Delete\" aria-label=\"delete\">\n                         <IconButton onClick={() => onDelete(todo.ID)}><DeleteIcon/></IconButton> \n                      </Tooltip>\n                      </>\n                    }\n                    title={<Box className={classes.box}>{todo.Todo}</Box>}\n                    subheader={todo.CreatedDate !== '0001-01-01T00:00:00Z' && new Date(todo.CreatedDate).toDateString()}\n                  />\n                  <CardContent>\n                      {todo.Priority && <Typography component='div' className={classes.title}  gutterBottom>\n                        Priority: {todo.Priority}\n                      </Typography>}\n                      {todo.Projects && <Typography component='div' className={classes.title}  gutterBottom>\n                        Projects: {todo.Projects.map((project)=>\n                        <Chip key={project} className={classes.chip} label={project} variant='outlined' color='primary'/> )}\n                      </Typography>}\n                      {todo.Contexts && <Typography component='div' className={classes.title}  gutterBottom>\n                        Contexts: {todo.Contexts.map((context)=> (\n                          <Chip key={context} className={classes.chip} label={context} variant='outlined' color='secondary'/> \n                        ))}\n                      </Typography>}\n                      {todo.DueDate !== '0001-01-01T00:00:00Z' && <Typography className={classes.title} gutterBottom>\n                        Due Date: {new Date(todo.DueDate).toDateString()}\n                      </Typography>}\n                      <Typography component='div' className={classes.title} gutterBottom>\n                        <Box alignItems='center' display='flex'>Completed: {todo.Completed ? <DoneIcon style={{ color:'green'}} />  : <ClearIcon style={{ color:'red'}}/> }</Box>\n                      </Typography>\n                  </CardContent>\n              </Card>\n            </Grid>\n    )\n}\n\nexport default Todos\n","import { Container, Grid, makeStyles } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listTodos } from '../actions/todoAction';\nimport { TODO_RESET } from '../actions/types';\nimport Todos from './Todos'\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: '15px 0px'\n    }\n  }));\n\nconst TodoList = ({ open }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const { todos } = useSelector(state => state.todoReducer)\n\n    const { deleted } = useSelector(state => state.todoReducer)\n\n    useEffect(()=> {\n        if(!deleted){\n            dispatch(listTodos())\n        } else {\n            dispatch({ type: TODO_RESET })\n        }\n    }, [dispatch, open, deleted])\n\n    return (\n        <div className={classes.margin}>\n            <Container>\n                <Grid container spacing={2}>\n                    {todos && todos.map((todo) => (\n                        <Todos  key={todo.ID} todo={todo}/>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\nexport default TodoList\n","import { Box, Button, Checkbox, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControlLabel, FormHelperText, InputLabel, makeStyles, TextField, Typography } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport 'date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  import DateFnsUtils from '@date-io/date-fns';\nimport { useDispatch } from 'react-redux';\nimport { createTodo } from '../actions/todoAction';\n  \n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n       marginBottom: theme.spacing(2)\n    }\n  }));\nconst Modal = ({open, setOpen}) => {\n    const [todoName, setTodoName] = useState('')\n    const [priority, setPriority] = useState('')\n    const [projects, setProjects] = useState([])\n    const [contexts, setContexts] = useState([])\n    const [dueDate, setDueDate] = useState(null)\n    const [completed, setCompleted] = useState(false )\n\n    const dispatch = useDispatch()\n    const classes = useStyles()\n\n    const handleClose = () => {\n        setOpen(false);\n        setTodoName('')\n        setPriority('')\n        setProjects([])\n        setContexts([])\n        setDueDate(null)\n        setCompleted(false)\n      };\n\n    const onSave = (e) => {\n        e.preventDefault()\n        dispatch(createTodo({\n            Todo: todoName,\n            Priority: priority,\n            Projects: projects,\n            Contexts: contexts,\n            DueDate: dueDate,\n            Completed : completed\n        })).then(() => handleClose())\n    }\n    const onHandleChange = (e) => {\n        var str = e.target.value.replace(/ +/g,\"\")\n        if(e.target.id === 'projects'){\n            setProjects(str.split(','))\n        }else {\n            setContexts(str.split(','))\n        }\n    }\n\n    return (\n        <div>\n            <Dialog\n                fullWidth\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <form onSubmit={onSave}>\n                    <DialogTitle id=\"alert-dialog-title\">{\"Create Todo\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            <Box component='div' className={classes.box}>\n                                <InputLabel>Todo</InputLabel>\n                                <TextField \n                                    fullWidth \n                                    id=\"todo\"  \n                                    placeholder=\"Enter Todo\" \n                                    value={todoName} \n                                    onChange={(e) => setTodoName(e.target.value)} \n                                    variant='outlined'\n                                    required\n                                />\n                            </Box>\n                            <Box component='div' className={classes.box}>\n                                <InputLabel>Priority</InputLabel>\n                            \n                                <TextField \n                                    fullWidth \n                                    id=\"priority\"\n                                    placeholder=\"Enter Priority\"\n                                    value={priority} \n                                    onChange={(e) => setPriority(e.target.value.toUpperCase())} \n                                    helperText='(Enter a single letter, [A - Z])'\n                                    inputProps={{ maxLength: 1}}\n                                    variant='outlined'\n                                />\n                            </Box>\n                            <Box component='div' className={classes.box}>\n                                <InputLabel>Projects</InputLabel>\n                                <TextField\n                                    fullWidth\n                                    id=\"projects\"\n                                    placeholder=\"Enter Projects\"\n                                    variant='outlined'\n                                    value={projects}\n                                    onChange={(e) => onHandleChange(e)} \n                                    helperText='(Enter comma(,) separated, ex: api,hiring)'\n                                />\n                            </Box>\n                            <Box component='div' className={classes.box}>\n                                <InputLabel>Contexts</InputLabel>\n                                <TextField \n                                    fullWidth\n                                    id=\"contexts\"\n                                    placeholder=\"Enter Contexts\"\n                                    variant='outlined'\n                                    value={contexts}\n                                    onChange={(e) => onHandleChange(e)}\n                                    helperText='(Enter comma(,) separated, ex: api,hiring)' \n                                />\n                            </Box>\n                            <Box component='div' className={classes.box}>\n                                <InputLabel>Due Date</InputLabel>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                    <KeyboardDatePicker\n                                    margin=\"normal\"\n                                    id=\"date-picker-dialog\"\n                                    autoOk={true}\n                                    format=\"MM/dd/yyyy\"\n                                    value={dueDate}\n                                    onChange={date => setDueDate(date)}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                    />\n                                </MuiPickersUtilsProvider>\n                            </Box>\n                            <Box component='div' className={classes.box} >\n                                <FormControlLabel\n                                    control={<Checkbox checked={completed} \n                                    onChange={() => setCompleted(!completed)} \n                                    name=\"completed\" />}\n                                    label=\"Completed?\"\n                                />\n                                <FormHelperText>(Check the box if completed)</FormHelperText>\n                            </Box>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} variant='outlined' color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type='submit' variant='outlined' color=\"primary\" autoFocus>\n                            Save\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport { Box, Button, Grid, InputLabel, makeStyles, TextField, Typography } from '@material-ui/core'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { useDispatch } from 'react-redux';\nimport { listTodos } from '../actions/todoAction'\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n       marginBlock: theme.spacing(2)\n    }\n}));\n\nconst FilterTodo = () => {\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n    const [values, setValues] = useState({\n        projects: [],\n        context: [],\n        priority: ''\n    })\n    const [dueBefore, setDueBefore] = useState(null)\n    const [dueAfter, setDueAfter] = useState(null)\n\n    const handleChange = prop => e => {\n        var str = e.target.value.replace(/ +/g,\"\")\n        setValues({ ...values, [prop]: str!== '' ? str.split(',') : [] })\n    }\n    const handleChangePriority = e => {\n        setValues({ ...values, priority: e.target.value.toUpperCase() })\n    }\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n    const onFilter = () => {\n        console.log(dueBefore)\n        dispatch(listTodos({...values, dueBefore: dueBefore ? formatDate(dueBefore) : null,\n            dueAfter: dueAfter ? formatDate(dueAfter): null}))\n\n    }\n    const onReset = () => {\n        setValues({ projects: [],\n            context: [],\n            priority: '' })\n        setDueAfter(null)\n        setDueBefore(null)\n        dispatch(listTodos())\n    }\n \n    return (\n        <Box px={2} py={1} my={1}>\n            <Typography component='h5' variant='h5'>Filter</Typography>\n            <Box className={classes.box}>\n                <InputLabel className='label-margin'>Projects</InputLabel>\n                <TextField\n                    fullWidth\n                    id=\"projects\"\n                    placeholder=\"Enter Projects\"\n                    variant='outlined'\n                    value={values.projects}\n                    onChange={handleChange('projects')}\n                    helperText='(Enter comma(,) separated, ex: api,hiring)'\n                />\n            </Box>\n            <Box className={classes.box}>\n                <InputLabel className='label-margin'>Priority</InputLabel>\n            \n                <TextField \n                    fullWidth \n                    id=\"priority\"\n                    placeholder=\"Enter Priority\"\n                    value={values.priority}\n                    onChange={handleChangePriority}\n                    inputProps={{ maxLength: 1 }} \n                    helperText='(Enter a single letter, [A - Z])'\n                    variant='outlined'\n                />\n            </Box>\n            <Box className={classes.box}>\n                <InputLabel className='label-margin'>Context</InputLabel>\n                <TextField \n                    fullWidth \n                    id=\"context\"  \n                    placeholder=\"Enter Context\" \n                    value={values.context}\n                    onChange={handleChange('context')} \n                    variant='outlined'\n                    helperText='(Enter comma(,) separated, ex: api,hiring)'\n                />\n            </Box>\n            <Box className={classes.box}>\n                <InputLabel>Due Before</InputLabel>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                    fullWidth\n                    margin=\"normal\"\n                    id=\"date-picker-dialog1\"\n                    autoOk={true}\n                    format=\"MM/dd/yyyy\"\n                    value={dueBefore}\n                    onChange={date => setDueBefore(date)}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                    />\n                </MuiPickersUtilsProvider>\n            </Box>\n            <Box className={classes.box}>\n                <InputLabel>Due After</InputLabel>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                    fullWidth\n                    margin=\"normal\"\n                    id=\"date-picker-dialog2\"\n                    autoOk={true}\n                    format=\"MM/dd/yyyy\"\n                    value={dueAfter}\n                    onChange={date => setDueAfter(date)}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                    />\n                </MuiPickersUtilsProvider>\n            </Box>\n            <Grid container direction='row' justify='space-around'>\n                <Button onClick={onFilter} variant='contained'>Filter</Button>\n                <Button onClick={onReset} variant='contained'>Reset</Button>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default FilterTodo\n","import { Fab, Grid, makeStyles, Tooltip, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport TodoList from '../components/TodoList'\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '../components/Modal';\nimport FilterTodo from '../components/FilterTodo';\n\nconst useStyles = makeStyles((theme) => ({\n    absolute: {\n      position: 'fixed',\n      bottom: theme.spacing(5),\n      right: theme.spacing(5),\n      backgroundColor: '#7E5995'\n    },\n    overflow: {\n      maxHeight: '90vh',\n      overflow: 'auto'\n    }\n  }));\nconst HomePage = () => {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n    return (\n        <Grid container spacing={0}>\n          <Grid item xs={3} className={classes.overflow}>\n            <FilterTodo/>\n          </Grid>\n          <Grid item xs={9} className={classes.overflow}>\n            <Tooltip title=\"Add\" aria-label=\"add\">\n                <Fab onClick={handleClickOpen} className={classes.absolute}>\n                    <AddIcon style={{ color:'#fff'}}/>\n                </Fab>\n            </Tooltip>\n            <TodoList open={open} />                \n            <Modal open={open} setOpen={setOpen}/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default HomePage\n","import { CREATE_TODO, DELETE_TODO, GET_TODO, LIST_TODOS, TODO_RESET, UPDATE_TODO } from \"../actions/types\"\n\nconst initialState = {\n    todos : [],\n    todo:{},\n    loading: false,\n    error: null\n}\nexport default (state = initialState, action) =>{\n    switch (action.type) {\n        case GET_TODO:\n            return{\n                ...state,\n                todo: action.payload\n            }\n        \n        case LIST_TODOS:\n            return {\n                ...state,\n                todos: action.payload\n            }\n        \n        case UPDATE_TODO:\n        case CREATE_TODO:\n            return {\n                ...state,\n                todo: action.payload,\n                success: true\n            }\n\n        case DELETE_TODO:\n            return {\n                ...state,\n                deleted: true\n            }\n        \n        case TODO_RESET:\n            return {\n                ...state,\n                todo: {},\n                success: false,\n                deleted: false\n            }\n        \n        default:\n            return state\n            \n    }\n}","import {combineReducers} from 'redux';\nimport todoReducer from './todoReducer';\n\n\nexport default combineReducers({\n    todoReducer : todoReducer\n});","import { createStore , applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState ={}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer , initialState , composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { useEffect, useState } from 'react'\nimport 'date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Box, Button, Checkbox, Container, FormControlLabel, FormHelperText, InputLabel, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodo, updateTodo } from '../actions/todoAction';\nimport { TODO_RESET } from '../actions/types';\nimport { Link } from 'react-router-dom';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n       marginBlock: theme.spacing(2)\n    },\n    typography: {\n        marginBlock: theme.spacing(2)\n    }\n  }));\n\nconst EditPage = ({match, history}) => {\n    const classes = useStyles()\n\n    const id = Number(match.params.id)\n    const dispatch = useDispatch()\n    \n    const todoReducer = useSelector(state => state.todoReducer)\n    const {todo, success} = todoReducer\n\n   \n\n    const [todoName, setTodoName] = useState('')\n    const [priority, setPriority] = useState('')\n    const [projects, setProjects] = useState([])\n    const [contexts, setContexts] = useState([])\n    const [dueDate, setDueDate] = useState(null)\n    const [completed, setCompleted] = useState(false)\n\n    useEffect(() => {\n        if(success){\n            dispatch({ type: TODO_RESET })\n            history.push('/')\n        } else {\n            if(!todo.Todo || todo.ID !== id){\n                dispatch(getTodo(id))\n            } else {\n                setTodoName(todo.Todo)\n                todo.Priority && setPriority(todo.Priority)\n                todo.Projects && setProjects(todo.Projects)\n                todo.Contexts && setContexts(todo.Contexts)\n                todo.Completed && setCompleted(todo.Completed)\n                todo.DueDate !== '0001-01-01T00:00:00Z' && setDueDate(todo.DueDate)\n            }\n        }\n    }, [dispatch, id, todo, history, success])\n\n    const onHandleChange = (e) => {\n        var str = e.target.value.replace(/ +/g,\"\")\n        if(e.target.id === 'projects'){\n            setProjects(str.split(','))\n        }else {\n            setContexts(str.split(','))\n        }\n    }\n\n    const onUpdate = (e) => {\n        e.preventDefault()\n        dispatch(updateTodo(id, {\n            Todo: todoName,\n            Priority: priority,\n            Projects: projects,\n            Contexts: contexts,\n            DueDate: dueDate,\n            Completed : completed\n        }))\n    }\n\n    return (\n        <div style={{margin: '15px 0'}}>\n            <Container>\n                <Link to='/' className='link-style'>\n                    <Button  variant='outlined' color=\"primary\">\n                        Go Back\n                    </Button>\n                </Link>\n                <Typography className={classes.typography} variant='h5'>Edit Todo</Typography>\n                <form onSubmit={onUpdate}>\n                    <Box className={classes.box}>\n                        <InputLabel className='label-margin'>Todo</InputLabel>\n                        <TextField \n                            fullWidth \n                            id=\"todo\"  \n                            placeholder=\"Enter Todo\" \n                            value={todoName} \n                            onChange={(e) => setTodoName(e.target.value)} \n                            variant='outlined'\n                            required\n                        />\n                    </Box>\n                    <Box className={classes.box}>\n                        <InputLabel className='label-margin'>Priority</InputLabel>\n                    \n                        <TextField \n                            fullWidth \n                            id=\"priority\"\n                            placeholder=\"Enter Priority\"\n                            value={priority} \n                            onChange={(e) => setPriority(e.target.value.toUpperCase())} \n                            inputProps={{ maxLength: 1}}\n                            helperText='(Enter a single letter, [A - Z])'\n                            variant='outlined'\n                        />\n                    </Box>\n                    <Box className={classes.box}>\n                        <InputLabel className='label-margin'>Projects</InputLabel>\n                        <TextField\n                            fullWidth\n                            id=\"projects\"\n                            placeholder=\"Enter Projects\"\n                            variant='outlined'\n                            value={projects}\n                            onChange={onHandleChange}\n                            helperText='(Enter comma(,) separated, ex: api,hiring)'\n                        />\n                    </Box>\n                    <Box className={classes.box}>\n                        <InputLabel className='label-margin'>Contexts</InputLabel>\n                        <TextField \n                            fullWidth\n                            id=\"contexts\"\n                            placeholder=\"Enter Contexts\"\n                            variant='outlined'\n                            value={contexts}\n                            onChange={onHandleChange}\n                            helperText='(Enter comma(,) separated, ex: api,hiring)'\n                        />\n                    </Box>\n                    <Box className={classes.box}>\n                        <InputLabel>Due Date</InputLabel>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"date-picker-dialog\"\n                            autoOk={true}\n                            format=\"MM/dd/yyyy\"\n                            value={dueDate}\n                            onChange={date => setDueDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </Box>\n                    <Box className={classes.box} >\n                        <FormControlLabel\n                            control={<Checkbox checked={completed} \n                            onChange={() => setCompleted(!completed)} \n                            name=\"completed\" />}\n                            label=\"Completed?\"\n                        />\n                        <FormHelperText>(Check the box if completed)</FormHelperText>\n                    </Box>\n                    <Button type='submit' variant='outlined' color=\"primary\" autoFocus>\n                        Update\n                    </Button>\n                </form>\n            </Container>\n        </div>\n    )\n}\n\nexport default EditPage\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport HomePage from './pages/HomePage';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport EditPage from './pages/EditPage';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar/>\n          <Route path='/' component={HomePage} exact/>\n          <Route path='/edit/:id' component={EditPage}/>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}